{"version":3,"file":"moment.js","sources":["~/@mat-datetimepicker/moment/src/moment.ts","~/@mat-datetimepicker/moment/src/adapter/index.ts","~/@mat-datetimepicker/moment/src/adapter/moment-datetime-formats.ts","~/@mat-datetimepicker/moment/src/adapter/moment-datetime-adapter.ts"],"sourcesContent":["/**\n * Generated bundle index. Do not edit.\n */\n\nexport {MomentDatetimeModule,MatMomentDatetimeModule,MomentDatetimeAdapter,MAT_MOMENT_DATETIME_FORMATS} from './public_api';\n","import { NgModule } from '@angular/core';\nimport {\n  MatMomentDateModule,\n  MomentDateModule\n} from '@angular/material-moment-adapter';\nimport {\n  MAT_DATETIME_FORMATS,\n  DatetimeAdapter\n} from '@mat-datetimepicker/core';\nimport { MomentDatetimeAdapter } from './moment-datetime-adapter';\nimport { MAT_MOMENT_DATETIME_FORMATS } from './moment-datetime-formats';\n\nexport {MomentDatetimeAdapter} from './moment-datetime-adapter';\nexport {MAT_MOMENT_DATETIME_FORMATS} from './moment-datetime-formats';\nexport class MomentDatetimeModule {\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [MomentDateModule],\n  providers: [\n    {\n      provide: DatetimeAdapter,\n      useClass: MomentDatetimeAdapter\n    }\n  ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MomentDatetimeModule_tsickle_Closure_declarations() {\n/** @type {?} */\nMomentDatetimeModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMomentDatetimeModule.ctorParameters;\n}\n\nexport class MatMomentDatetimeModule {\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [MomentDatetimeModule, MatMomentDateModule],\n  providers: [{provide: MAT_DATETIME_FORMATS, useValue: MAT_MOMENT_DATETIME_FORMATS}]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MatMomentDatetimeModule_tsickle_Closure_declarations() {\n/** @type {?} */\nMatMomentDatetimeModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMatMomentDatetimeModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { MatDatetimeFormats } from '@mat-datetimepicker/core';\n\nexport const /** @type {?} */ MAT_MOMENT_DATETIME_FORMATS: MatDatetimeFormats = {\n  parse: {\n    dateInput: \"l\"\n  },\n  display: {\n    dateInput: \"l\",\n    monthInput: \"MMMM\",\n    datetimeInput: \"L LT\",\n    timeInput: \"LT\",\n    monthYearLabel: \"MMM YYYY\",\n    dateA11yLabel: \"LL\",\n    monthYearA11yLabel: \"MMMM YYYY\"\n  }\n};\n","import {\n  Inject,\n  Injectable,\n  Optional\n} from '@angular/core';\nimport {\n  DateAdapter,\n  MAT_DATE_LOCALE\n} from '@angular/material';\nimport { DatetimeAdapter } from '@mat-datetimepicker/core';\n\n// import * as moment from \"moment\";\n// import { Moment } from \"moment\";\n// can't get this to build... ><\n\nimport * as _moment from 'moment';\nimport {\n  default as _rollupMoment,\n  Moment\n} from 'moment';\n\nconst /** @type {?} */ moment = _rollupMoment || _moment;\n/**\n * @template T\n * @param {?} length\n * @param {?} valueFunction\n * @return {?}\n */\nfunction range<T>(length: number, valueFunction: (index: number) => T): T[] {\n  const /** @type {?} */ valuesArray = Array(length);\n  for (let /** @type {?} */ i = 0; i < length; i++) {\n    valuesArray[i] = valueFunction(i);\n  }\n  return valuesArray;\n}\nexport class MomentDatetimeAdapter extends DatetimeAdapter<Moment> {\nprivate _localeData: {\n    firstDayOfWeek: number,\n    longMonths: string[],\n    shortMonths: string[],\n    dates: string[],\n    hours: string[],\n    minutes: string[],\n    longDaysOfWeek: string[],\n    shortDaysOfWeek: string[],\n    narrowDaysOfWeek: string[]\n  };\n/**\n * @param {?} matDateLocale\n * @param {?} _delegate\n */\nconstructor(  matDateLocale: string, _delegate: DateAdapter<Moment>) {\n    super(_delegate);\n    this.setLocale(matDateLocale || moment.locale());\n  }\n/**\n * @param {?} locale\n * @return {?}\n */\nsetLocale(locale: string) {\n    super.setLocale(locale);\n\n    const /** @type {?} */ momentLocaleData = moment.localeData(locale);\n    this._localeData = {\n      firstDayOfWeek: momentLocaleData.firstDayOfWeek(),\n      longMonths: momentLocaleData.months(),\n      shortMonths: momentLocaleData.monthsShort(),\n      dates: range(31, (i) => super.createDate(2017, 0, i + 1).format(\"D\")),\n      hours: range(24, (i) => this.createDatetime(2017, 0, 1, i, 0).format(\"H\")),\n      minutes: range(60, (i) => this.createDatetime(2017, 0, 1, 1, i).format(\"m\")),\n      longDaysOfWeek: momentLocaleData.weekdays(),\n      shortDaysOfWeek: momentLocaleData.weekdaysShort(),\n      narrowDaysOfWeek: momentLocaleData.weekdaysMin()\n    };\n  }\n/**\n * @param {?} date\n * @return {?}\n */\npublic getHour(date: Moment): number {\n    return super.clone(date).hour();\n  }\n/**\n * @param {?} date\n * @return {?}\n */\npublic getMinute(date: Moment): number {\n    return super.clone(date).minute();\n  }\n/**\n * @param {?} startDate\n * @param {?} endDate\n * @return {?}\n */\npublic isInNextMonth(startDate: Moment, endDate: Moment): boolean {\n    const /** @type {?} */ nextMonth = this.getDateInNextMonth(startDate);\n    return super.sameMonthAndYear(nextMonth, endDate);\n  }\n/**\n * @param {?} year\n * @param {?} month\n * @param {?} date\n * @param {?} hour\n * @param {?} minute\n * @return {?}\n */\npublic createDatetime(year: number, month: number, date: number, hour: number, minute: number): Moment {\n    // Check for invalid month and date (except upper bound on date which we have to check after\n    // creating the Date).\n    if (month < 0 || month > 11) {\n      throw Error(`Invalid month index \"${month}\". Month index has to be between 0 and 11.`);\n    }\n\n    if (date < 1) {\n      throw Error(`Invalid date \"${date}\". Date has to be greater than 0.`);\n    }\n\n    if (hour < 0 || hour > 23) {\n      throw Error(`Invalid hour \"${hour}\". Hour has to be between 0 and 23.`);\n    }\n\n    if (minute < 0 || minute > 59) {\n      throw Error(`Invalid minute \"${minute}\". Minute has to be between 0 and 59.`);\n    }\n\n    // const result = moment({year, month, date, hour, minute}).locale(this.locale);\n    const /** @type {?} */ result = moment({year, month, date, hour, minute});\n\n    // If the result isn't valid, the date must have been out of bounds for this month.\n    if (!result.isValid()) {\n      throw Error(`Invalid date \"${date}\" for month with index \"${month}\".`);\n    }\n\n    return result;\n  }\n/**\n * @param {?} date\n * @return {?}\n */\nprivate getDateInNextMonth(date: Moment) {\n    return super.clone(date).date(1).add({month: 1});\n  }\n/**\n * @param {?} date\n * @return {?}\n */\npublic getFirstDateOfMonth(date: Moment): Moment {\n    return super.clone(date).startOf(\"month\");\n  }\n/**\n * @return {?}\n */\npublic getHourNames(): string[] {\n    return this._localeData.hours;\n  }\n/**\n * @return {?}\n */\npublic getMinuteNames(): string[] {\n    return this._localeData.minutes;\n  }\n/**\n * @param {?} date\n * @param {?} hours\n * @return {?}\n */\npublic addCalendarHours(date: Moment, hours: number): Moment {\n    return super.clone(date).add({hours});\n  }\n/**\n * @param {?} date\n * @param {?} minutes\n * @return {?}\n */\npublic addCalendarMinutes(date: Moment, minutes: number): Moment {\n    return super.clone(date).add({minutes});\n  }\n/**\n * @param {?} value\n * @return {?}\n */\npublic deserialize(value: any): Moment | null {\n     return this._delegate.deserialize(value);\n   }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_LOCALE, ] }, ]},\n{type: DateAdapter, },\n];\n}\n\nfunction MomentDatetimeAdapter_tsickle_Closure_declarations() {\n/** @type {?} */\nMomentDatetimeAdapter.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMomentDatetimeAdapter.ctorParameters;\n/** @type {?} */\nMomentDatetimeAdapter.prototype._localeData;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"],"names":["_rollupMoment","_moment"],"mappings":"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"}
